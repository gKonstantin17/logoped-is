spring.application.name=rs-main

# for db
spring.datasource.url=jdbc:postgresql://localhost:5432/Logoped
spring.jpa.properties.hibernate.default_schema=logoped
spring.datasource.username=postgres
spring.datasource.password=rootroot
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jackson.time-zone=Europe/Moscow


# style names of tables and fields (PascalCase)
spring.jpa.hibernate.naming.physical-strategy=logopedis.libutils.hibernate.PascalCaseNamingStrategy

# swagger (used in security and utils.SwaggerAutoOpener)
swagger.enabled=true

#spring.security.user.name=admin
#spring.security.user.password=admin
springdoc.swagger-ui.operationsSorter=method
#springdoc.swagger-ui.oauth2-redirect-url=http://localhost:8280/swagger-ui/oauth2-redirect.html
springdoc.swagger-ui.persist-authorization=true
# port
server.port=8280
# if swagger enabled - use static port


# logging sql
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
logging.level.org.hibernate.type.descriptor.sql=trace

# keycloak
keycloak.auth-server-url=http://localhost:8180/
keycloak.resource=user-manage-client
keycloak.realm=logoped-realm
keycloak.ssl-required=external
keycloak.credentials.secret=vXQaukDUTP6bDBA7NYUI9JDuwQPI2Akw
keycloak.use-resource-role-mappings=true
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://localhost:8180/realms/logoped-realm/protocol/openid-connect/certs

keycloak.admin.client=admin-client
keycloak.admin.secret=NHxCrJRkAO3MKsm8DzsUu7w1XKIh17Xd

# frontend
client.url=http://localhost:4200



### MS ###
eureka.client.service-url.defaultZone=http://localhost:8761/eureka
# actuator
management.endpoint.gateway.access=unrestricted
management.endpoints.web.exposure.include=*

logging.pattern.console=%C{1.} [%-5level] %d{HH:mm:ss} - %msg%n

# kafka
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=rs1
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*


spring.kafka.producer.bootstrap-servers=localhost:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer